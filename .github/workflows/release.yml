name: 🚀 Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  build-and-test:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: 📦 Install uv and 🐍 Python
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          python-version: 3.13
          version: latest

      - name: 📦 Install all dependencies
        run: make init

      - name: 🧪 Run tests
        run: make test

      - name: 🏗️ Build applications
        run: make build

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            frontend/dist/
            backend/bin/
          retention-days: 1

  docker-build:
    name: 🐳 Build Docker Images
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/ai-service
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: 🏗️ Build and push AI Service Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./ai-service/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          sbom: true
          provenance: true

  create-release:
    name: 📝 Create Release
    runs-on: ubuntu-latest
    needs: [build-and-test, docker-build]
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: 🏷️ Get version
        id: version
        run: |
          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: 📝 Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [[ -z "$PREV_TAG" ]]; then
            echo "changelog=🎉 Initial release of Poo Tracker!" >> $GITHUB_OUTPUT
          else
            # Generate changelog from commits
            CHANGELOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "## What's New" >> $GITHUB_OUTPUT
            echo "$CHANGELOG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: 🚀 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: '💩 Poo Tracker ${{ steps.version.outputs.version }}'
          body: |
            # Poo Tracker Release ${{ steps.version.outputs.version }}

            ${{ steps.changelog.outputs.changelog }}

            ## 🐳 Docker Images

            - AI Service: `ghcr.io/${{ github.repository }}/ai-service:${{ steps.version.outputs.version }}`

            ## 🚀 Quick Start

            ```bash
            git clone https://github.com/${{ github.repository }}.git
            cd poo-tracker
            pnpm --filter @poo-tracker/frontend install
            make docker-up
            make dev
            ```

            ## 📖 Documentation

            For full setup and usage instructions, see the [README](https://github.com/${{ github.repository }}/blob/main/README.md).

            ---

            **Disclaimer:** Not responsible for phone screen damage caused by ill-advised photo documentation. Use with pride, shame, or scientific detachment. Up to you. 💩
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'rc') }}

  notify-deployment:
    name: 📢 Notify Deployment
    runs-on: ubuntu-latest
    needs: create-release
    if: always()

    steps:
      - name: 📢 Deployment notification
        run: |
          echo "🎉 Poo Tracker ${{ needs.create-release.outputs.version }} has been released!"
          echo "🚀 Ready to track some legendary logs!"
