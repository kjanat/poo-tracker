name: 🎨 Format & Lint

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format-and-lint:
    name: 🧹 Auto-fix & Format
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: 📦 Install uv and 🐍 Python
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          python-version: 3.13
          version: latest

      - name: 📦 Install dependencies
        run: |
          command -v pnpm >/dev/null || { echo "❌ pnpm not found"; exit 1; }
          command -v uv >/dev/null || { echo "❌ uv not found"; exit 1; }

          pnpm install || { echo "❌ Failed to run pnpm install"; exit 1; }

          [[ -d ai-service ]] || { echo "❌ Directory 'ai-service' not found"; exit 1; }
          cd ai-service || exit 1

          if [[ -f pyproject.toml ]]; then
            uv sync --group dev 2>/dev/null || uv pip install -e . --system 2>/dev/null
            status=$?
          else
            echo "⚠️  No pyproject.toml found — skipping uv sync and editable install"
            status=1
          fi

          if [[ $status -ne 0 ]]; then
            if [[ -f requirements.txt ]]; then
              uv pip install -r requirements.txt --system || { echo "❌ uv install from requirements.txt failed"; exit 1; }
            else
              echo "❌ No valid pyproject.toml or requirements.txt found to install from"
              exit 1
            fi
          fi

          echo "✅ All done."

      - name: 🎨 Format TypeScript/JavaScript
        run: |
          pnpm lint:fix:frontend || true
          pnpm lint:fix:backend || true

      - name: 🎨 Format Python
        run: |
          uvx black ai-service
          uvx isort ai-service

      - name: 🦀 Format with Ruff
        run: |
          cd ai-service
          uv run ruff format .
          uv run ruff check . --fix

      - name: 📝 Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changed files:"
            git status --porcelain
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          fi

      - name: 💾 Commit changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        continue-on-error: true
        run: |
          git config --local user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --local user.name github-actions[bot]
          git add .
          git commit -m "🎨 Auto-fix formatting and linting issues

      - name: 🚀 Push changes
        if: success() && steps.verify-changed-files.outputs.changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  lint-check:
    name: 🔍 Lint Check
    runs-on: ubuntu-latest
    needs: format-and-lint
    permissions:
      contents: read

    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: 📦 Install uv and 🐍 Python
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true
          python-version: 3.13
          version: latest

      - name: 📦 Install dependencies
        run: |
          command -v pnpm >/dev/null || { echo "❌ pnpm not found"; exit 1; }
          command -v uv >/dev/null || { echo "❌ uv not found"; exit 1; }

          pnpm install || { echo "❌ Failed to run pnpm install"; exit 1; }

          [[ -d ai-service ]] || { echo "❌ Directory 'ai-service' not found"; exit 1; }
          cd ai-service || exit 1

          if [[ -f pyproject.toml ]]; then
            uv sync --group dev 2>/dev/null || uv pip install -e . --system 2>/dev/null
            status=$?
          else
            echo "⚠️  No pyproject.toml found — skipping uv sync and editable install"
            status=1
          fi

          if [[ $status -ne 0 ]]; then
            if [[ -f requirements.txt ]]; then
              uv pip install -r requirements.txt --system || { echo "❌ uv install from requirements.txt failed"; exit 1; }
            else
              echo "❌ No valid pyproject.toml or requirements.txt found to install from"
              exit 1
            fi
          fi

          echo "✅ All done."

      - name: 🧹 Lint Frontend
        run: pnpm lint:frontend

      - name: 🧹 Lint Backend
        run: pnpm lint:backend

      - name: 🧹 Lint Python
        run: |
          uvx ruff check ai-service
          uvx ruff format ai-service --check
          uvx black ai-service --check
          uvx isort ai-service --check-only
